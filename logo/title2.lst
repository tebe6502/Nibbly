Mad-Assembler v1.7.3 by TeBe/Madteam
Source: D:\!Atari\nibbly\logo\title2.asm
     1 				/***************************************/
     2 				/*  Use MADS http://mads.atari8.info/  */
     3 				/*  Mode: DLI (char mode)              */
     4 				/***************************************/
     5
     6 = 003F			scr48	= %00111111	;screen 48b
     7 = 003E			scr40	= %00111110	;screen 40b
     8 = 003D			scr32	= %00111101	;screen 32b
     9
    10 = 0014			cloc	= $0014		;(1)
    11 = 0000			byt2	= $0000		;(1) <$0100
    12 = 0100			byt3	= $0100		;(1) >$00FF
    13
    14 = 0080			ftmp	= $80		;(2)
    15 = 0082			regA	= ftmp+2	;(1)
    16 = 0083			regX	= regA+1	;(1)
    17 = 0084			regY	= regX+1	;(1)
    18
    19 = D000			hposp0	 = $D000
    20 = D001			hposp1	 = $D001
    21 = D002			hposp2	 = $D002
    22 = D003			hposp3	 = $D003
    23 = D004			hposm0	 = $D004
    24 = D005			hposm1	 = $D005
    25 = D006			hposm2	 = $D006
    26 = D007			hposm3	 = $D007
    27 = D008			sizep0	 = $D008
    28 = D009			sizep1	 = $D009
    29 = D00A			sizep2	 = $D00A
    30 = D00B			sizep3	 = $D00B
    31 = D00C			sizem	 = $D00C
    32
    33 = D012			colpm0	 = $D012
    34 = D013			colpm1	 = $D013
    35 = D014			colpm2	 = $D014
    36 = D015			colpm3	 = $D015
    37 = D016			color0	 = $D016
    38 = D017			color1	 = $D017
    39 = D018			color2	 = $D018
    40 = D019			color3	 = $D019
    41 = D01A			colbak	 = $D01A
    42 = D01B			gtictl	 = $D01B
    43
    44 = D409			chbase	 = $D409
    45
    46 				;-- BASIC switch OFF
    47 				 org $2000
    48 FFFF> 2000-2005> A9 FF +	 mva #$ff $d301
    49 2005 60			 rts
    50 02E2-02E3> 00 20		 ini $2000
    51
    52 				;-- MAIN PROGRAM
    53 02E4			 org $2000
    54
    55 				ant	ANTIC_PROGRAM scr,ant
Macro: ANTIC_PROGRAM [Source: D:\!Atari\nibbly\logo\title2.asm]
     1 2000-213A> 70 70 70 70 +	 dta $70,$70,$70,$70,$70,$70,$70,$70,$70,$70,$70,$70,$44,a(SCR),$04,$04,$04,$04,$70,$70,$04,$04,$70,$70,$70,$70,$70,$70,$70,$70,$70
     2 2020 41 00 20		 dta $41,a(ANT)
Source: D:\!Atari\nibbly\logo\title2.asm
    56
    57 				scr	SCREEN_DATA
Macro: SCREEN_DATA [Source: D:\!Atari\nibbly\logo\title2.asm]
     1 2023 00 00 00 00 00 00 +	 ins 'title2.scr'
Source: D:\!Atari\nibbly\logo\title2.asm
    58
    59 					ALIGN $0400
Macro: ALIGN [Source: D:\!Atari\nibbly\logo\title2.asm]
     2 213B			  org (*/$0400)*$0400+$0400
Source: D:\!Atari\nibbly\logo\title2.asm
    60 				fnt	FONTS
Macro: FONTS [Source: D:\!Atari\nibbly\logo\title2.asm]
     1 2400-27FF> 00 00 00 00 +	 ins 'title2.fnt'
Source: D:\!Atari\nibbly\logo\title2.asm
    61
    62 					ALIGN $1000
Macro: ALIGN [Source: D:\!Atari\nibbly\logo\title2.asm]
     2 2800			  org (*/$1000)*$1000+$1000
Source: D:\!Atari\nibbly\logo\title2.asm
    63 3000				.ds $0300
    64 				pmg	SPRITES
Macro: SPRITES [Source: D:\!Atari\nibbly\logo\title2.asm]
     1 3300-33FF> 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
     2 3310 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
     3 3320 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
     4 3330 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
     5 3340 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
     6 3350 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
     7 3360 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
     8 3370 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
     9 3380 00 00 80 00 00 00 +	 dta $00,$00,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    10 3390 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    11 33A0 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    12 33B0 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    13 33C0 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    14 33D0 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    15 33E0 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    16 33F0 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$3F,$3F,$3F,$3F,$3F,$3F,$3F,$3F
    20 3600-3A50> 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    21 3610 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    22 3620 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    23 3630 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    24 3640 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    25 3650 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    26 3660 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    27 3670 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    28 3680 98 00 98 A8 A8 A8 +	 dta $98,$00,$98,$A8,$A8,$A8,$28,$28,$A8,$08,$30,$00,$00,$00,$00,$00
    29 3690 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    30 36A0 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    31 36B0 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    32 36C0 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    33 36D0 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    34 36E0 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    35 36F0 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    37 3700 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    38 3710 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    39 3720 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    40 3730 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    41 3740 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    42 3750 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    43 3760 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    44 3770 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    45 3780 59 00 51 AA 8A AA +	 dta $59,$00,$51,$AA,$8A,$AA,$8B,$AA,$AA,$00,$80,$00,$00,$00,$00,$00
    46 3790 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    47 37A0 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    48 37B0 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    49 37C0 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    50 37D0 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    51 37E0 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    52 37F0 00 00 00 00 00 00 +	 dta $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
Source: D:\!Atari\nibbly\logo\title2.asm
    65
    66 3800			main
    67 				;-- init PMG
    68 3800 A9 33 8D 07 D4	 mva >pmg $d407		;missiles and players data address
    69 3805 A9 03 8D 1D D0	 mva #3 $d01d		;enable players and missiles
    70
    71 				 ift .def CHANGES	;if label CHANGES defined
    72 380A 20 DB 39		 jsr save_color		;then save all colors and set value 0 for all colors
    73 				 eif
    74
    75 				 lda:cmp:req 20		;wait 1 frame
    75 380D A5 14		 lda 20		
    75 380F C5 14		 cmp 20		
    75 3811 F0 FC		 req 20		
    76
    77 3813 78			 sei			;stop interrups
    78 3814 A9 00 8D 0E D4	 mva #0 $d40e		;stop all interrupts
    79 3819 A9 FE 8D 01 D3	 mva #$fe $d301		;switch off ROM to get 16k more ram
    80
    81 381E A9 60 8D FA FF A9 +	 mwa #nmi $fffa		;new NMI handler
    82
    83 3828 A9 C0 8D 0E D4	 mva #$c0 $d40e		;switch on NMI+DLI again
    84
    85 				 ift .def CHANGES	;if label CHANGES defined
    86 382D 20 03 39		 jsr fade_in		;fade in colors
    87 3830 AD 0F D2		_lp lda $d20f		;wait to press any key; here you can put any own routine
    88 3833 29 04		 and #4
    89 3835 D0 F9		 bne _lp
    90 3837 20 7F 39		 jsr fade_out		;fade out colors
    91 383A A9 00 8D 1D D0	 mva #0   $d01d		;PMG disabled
    92 383F A9 FF 8D 01 D3	 mva #$ff $d301		;ROM switch on
    93 3844 A9 40 8D 0E D4	 mva #$40 $d40e		;only NMI interrupts, DLI disabled
    94 3849 58			 cli			;IRQ enabled
    95 384A 6C 0A 00		 jmp ($a)		;jump to DOS
    96 				 els
    97 				null jmp dli1		;CPU is busy here, so no more routines allowed
    98 				 eif
    99
   100 				;-- DLI PROGRAM
   101
   102 = 384D			 ?old_dli = *
   103
   104 384D			dli1
   105 384D AD 0B D4		 lda $d40b
   106 3850 C9 02		 cmp #2
   107 3852 D0 F9		 bne dli1
   108 3854 8D 0A D4 8D 0A D4 +	 :3 sta $d40a
   109 385D 4C D3 38		 jmp NmiQuit
   110 3860			dli_start
   111
   112
   113 				;--
   114
   115 3860			CHANGES
   116
   117 3860			nmi
   118 3860 85 82		 sta regA
   119 3862 86 83		 stx regX
   120 3864 84 84		 sty regY
   121
   122 3866 2C 0F D4		 bit $d40f
   123 3869 10 03		 bpl vbl
   124
   125 386B 4C 60 38		dliv jmp dli_start
   126
   127 386E			vbl			;VBL routine
   128 386E 8D 0F D4		 sta $d40f		;reset NMI flag
   129
   130 3871 E6 14		 inc cloc		;little timer
   131
   132 3873 A9 00 8D 02 D4 A9 +	 mwa #ant   $d402		;ANTIC address program
   133 387D A9 3E 8D 00 D4	 mva #scr40 $d400	;set new screen's width
   134
   135 				;-- first line of screen initialization
   136
   137 3882 A9 24		 lda >fnt
   138 3884 8D 09 D4		 sta chbase
   139 3887 A9 00		c0 lda #$00
   140 3889 8D 1A D0		 sta colbak
   141 388C A9 0A		c1 lda #$0A
   142 388E 8D 16 D0		 sta color0
   143 3891 A9 78		c2 lda #$78
   144 3893 8D 17 D0		 sta color1
   145 3896 A9 64		c3 lda #$64
   146 3898 8D 18 D0		 sta color2
   147 389B A9 34		c4 lda #$34
   148 389D 8D 19 D0		 sta color3
   149 38A0 A9 04		 lda #$04
   150 38A2 8D 1B D0		 sta gtictl
   151 38A5 A9 01		 lda #$01
   152 38A7 8D 0A D0		 sta sizep2
   153 38AA 8D 0B D0		 sta sizep3
   154 38AD A9 00		 lda #$00
   155 38AF 8D 0C D0		 sta sizem
   156 38B2 A9 68		 lda #$68
   157 38B4 8D 02 D0		 sta hposp2
   158 38B7 A9 58		 lda #$58
   159 38B9 8D 03 D0		 sta hposp3
   160 38BC A9 5C		 lda #$5C
   161 38BE 8D 07 D0		 sta hposm3
   162 38C1 A9 38		c5 lda #$38
   163 38C3 8D 14 D0		 sta colpm2
   164 38C6 8D 15 D0		 sta colpm3
   165
   166 38C9 A9 60 8D 6C 38 A9 +	 mwa #dli_start dliv+1	;set the first address of DLI interrupt
   167
   168 				;this area is for yours routines
   169
   170 38D3			NmiQuit
   171 38D3 A5 82		 lda regA
   172 38D5 A6 83		 ldx regX
   173 38D7 A4 84		 ldy regY
   174 38D9 40			 rti
   175
   176 				;--
   177 38DA			 icl 'title2.fad'
Source: D:\!Atari\nibbly\logo\title2.fad
     1 = 0006			color_nr = 6
     2 				;-----------;
     3 				;-  WAIT   -;
     4 				;-----------;
     5 38DA			.proc wait
     6 				 lda:cmp:req cloc
     6 38DA A5 14		 lda cloc
     6 38DC C5 14		 cmp cloc
     6 38DE F0 FC		 req cloc
     7 38E0 CA			 dex
     8 38E1 D0 F7		 bne wait
     9 38E3 60			 rts
    10 				.endp
    11
    12 				;-----------;
    13 				;-  FADE   -;
    14 				;-----------;
    15 38E4			.proc fade
    16 38E4 8E FA 38		 stx adr+1
    17 38E7 8C FB 38		 sty adr+2
    18
    19 38EA A2 06		 ldx #6
    20 38EC 20 DA 38		 jsr wait
    21 				 
    22 38EF A9 10 8D 02 39	 mva #16 licz
    23 38F4			fad
    24 38F4 A2 02		 ldx #2
    25 38F6 20 DA 38		 jsr wait
    26
    27 38F9 20 FF FF		adr jsr $ffff
    28
    29 38FC CE 02 39		 dec licz
    30 38FF D0 F3		 bne fad
    31 3901 60			 rts
    32
    33 3902 00			licz brk
    34 				.endp
    35
    36 				;-----------;
    37 				;- FADE IN -;
    38 				;-----------;
    39 3903			.proc fade_in
    40
    41 3903 A2 0A		 ldx <fade
    42 3905 A0 39		 ldy >fade
    43 3907 4C E4 38		 jmp :fade
    44
    45 390A			fade
    46
    47 390A A9 45 8D 38 39	 mva <tab.l_tcol  adr0+1
    48 390F A9 4B 8D 3D 39	 mva <tab.h_tcol  adr1+1
    49 3914 A9 51 8D 56 39	 mva <tab.t_satur adr2+1
    50 3919 A9 57 8D 49 39	 mva <tab.t_color adr3+1
    51
    52 391E A9 3A 8D 39 39	 mva >tab.l_tcol  adr0+2
    53 3923 A9 3A 8D 3E 39	 mva >tab.h_tcol  adr1+2
    54 3928 A9 3A 8D 57 39	 mva >tab.t_satur adr2+2
    55 392D A9 3A 8D 4A 39	 mva >tab.t_color adr3+2
    56
    57 3932 A2 00 8E 7E 39	 mvx #0 count
    58
    59 3937			fade_l
    60 3937 BD FF FF		adr0 lda $ffff,x
    61 393A 85 80		 sta ftmp
    62 393C BD FF FF		adr1 lda $ffff,x
    63 393F 85 81		 sta ftmp+1
    64
    65 3941 A0 01		 ldy #1
    66 3943 B1 80		 lda (ftmp),y
    67 3945 A8			 tay
    68
    69 3946 29 F0		 and #$f0
    70 3948 DD FF FF		adr3 cmp $ffff,x
    71 394B F0 05		 beq skp1
    72
    73 394D 98			 tya
    74 394E 18 69 10		 add #$10
    75 3951 A8			 tay
    76
    77 3952			skp1
    78
    79 3952 98			 tya
    80 3953 29 0F		 and #$0f
    81 3955 DD FF FF		adr2 cmp $ffff,x
    82 3958 F0 01		 beq skp0
    83
    84 395A C8			 iny
    85
    86 395B			skp0
    87
    88 395B 98			 tya
    89 395C A0 01		 ldy #1
    90 395E 91 80		 sta (ftmp),y
    91
    92 3960 E8			 inx
    93 3961 D0 0F		 bne skp
    94 3963 EE 7E 39		 inc count
    95
    96 3966 EE 39 39		 inc adr0+2
    97 3969 EE 3E 39		 inc adr1+2
    98 396C EE 57 39		 inc adr2+2
    99 396F EE 4A 39		 inc adr3+2
   100
   101 3972			skp
   102 3972 E0 06		 cpx <color_nr
   103 3974 D0 C1		 bne fade_l
   104 3976 AD 7E 39		 lda count
   105 3979 C9 00		 cmp >color_nr
   106 397B D0 BA		 bne fade_l
   107 397D 60			 rts
   108
   109 397E 00			count brk
   110 				.endp
   111
   112 				;------------;
   113 				;- FADE OUT -;
   114 				;------------;
   115 397F			.proc fade_out
   116
   117 397F A2 86		 ldx <fade
   118 3981 A0 39		 ldy >fade
   119 3983 4C E4 38		 jmp :fade
   120
   121 3986			fade
   122
   123 3986 A9 45 8D A0 39	 mva <tab.l_tcol adr0+1
   124 398B A9 4B 8D A5 39	 mva <tab.h_tcol adr1+1
   125
   126 3990 A9 3A 8D A1 39	 mva >tab.l_tcol adr0+2
   127 3995 A9 3A 8D A6 39	 mva >tab.h_tcol adr1+2
   128
   129 399A A2 00 8E DA 39	 mvx #0 count
   130
   131 399F			fade_l
   132 399F BD FF FF		adr0 lda $ffff,x
   133 39A2 85 80		 sta ftmp
   134 39A4 BD FF FF		adr1 lda $ffff,x
   135 39A7 85 81		 sta ftmp+1
   136
   137 39A9 A0 01		 ldy #1
   138 39AB B1 80		 lda (ftmp),y
   139 39AD A8			 tay
   140
   141 39AE 29 0F		 and #$0f
   142 39B0 F0 01		 beq skp0
   143
   144 39B2 88			 dey
   145
   146 39B3			skp0
   147
   148 39B3 98			 tya
   149 39B4 29 F0		 and #$f0
   150 39B6 F0 05		 beq skp1
   151
   152 39B8 98			 tya
   153 39B9 38 E9 10		 sub #$10
   154 39BC A8			 tay
   155
   156 39BD			skp1
   157 39BD 98			 tya
   158
   159 39BE A0 01		 ldy #1
   160 39C0 91 80		 sta (ftmp),y
   161
   162 39C2 E8			 inx
   163 39C3 D0 09		 bne skp
   164 39C5 EE DA 39		 inc count
   165
   166 39C8 EE A1 39		 inc adr0+2
   167 39CB EE A6 39		 inc adr1+2
   168
   169 39CE			skp
   170 39CE E0 06		 cpx <color_nr
   171 39D0 D0 CD		 bne fade_l
   172 39D2 AD DA 39		 lda count
   173 39D5 C9 00		 cmp >color_nr
   174 39D7 D0 C6		 bne fade_l
   175 39D9 60			 rts
   176
   177 39DA 00			count brk
   178 				.endp
   179
   180 				;--------------;
   181 				;- SAVE COLOR -;
   182 				;--------------;
   183 39DB			.proc save_color
   184
   185 39DB A9 45 8D 09 3A	 mva <tab.l_tcol  adr0+1
   186 39E0 A9 4B 8D 0E 3A	 mva <tab.h_tcol  adr1+1
   187 39E5 A9 51 8D 1A 3A	 mva <tab.t_satur adr2+1
   188 39EA A9 57 8D 20 3A	 mva <tab.t_color adr3+1
   189
   190 39EF A9 3A 8D 0A 3A	 mva >tab.l_tcol  adr0+2
   191 39F4 A9 3A 8D 0F 3A	 mva >tab.h_tcol  adr1+2
   192 39F9 A9 3A 8D 1B 3A	 mva >tab.t_satur adr2+2
   193 39FE A9 3A 8D 21 3A	 mva >tab.t_color adr3+2
   194
   195 3A03 A2 00 8E 44 3A	 mvx #0 count
   196
   197 3A08			save_l
   198 3A08 BD FF FF		adr0 lda $ffff,x
   199 3A0B 85 80		 sta ftmp
   200 3A0D BD FF FF		adr1 lda $ffff,x
   201 3A10 85 81		 sta ftmp+1
   202
   203 3A12 A0 01		 ldy #1
   204 3A14 B1 80		 lda (ftmp),y
   205 3A16 48			 pha
   206 3A17 29 0F		 and #$0f
   207 3A19 9D FF FF		adr2 sta $ffff,x
   208 3A1C 68			 pla
   209 3A1D 29 F0		 and #$f0
   210 3A1F 9D FF FF		adr3 sta $ffff,x
   211
   212 3A22 A9 00		 lda #0        ; black screen (all colors = $00)
   213 3A24 91 80		 sta (ftmp),y
   214
   215 3A26 E8			 inx
   216 3A27 D0 0F		 bne skp
   217 3A29 EE 44 3A		 inc count
   218
   219 3A2C EE 0A 3A		 inc adr0+2
   220 3A2F EE 0F 3A		 inc adr1+2
   221 3A32 EE 1B 3A		 inc adr2+2
   222 3A35 EE 21 3A		 inc adr3+2
   223
   224 3A38			skp
   225 3A38 E0 06		 cpx <color_nr
   226 3A3A D0 CC		 bne save_l
   227 3A3C AD 44 3A		 lda count
   228 3A3F C9 00		 cmp >color_nr
   229 3A41 D0 C5		 bne save_l
   230 3A43 60			 rts
   231
   232 3A44 00			count brk
   233 				.endp
   234
   235 3A45			.proc tab
   236 3A45			l_tcol
   237 3A45 87 8C 91 96 9B C1	 dta l(c0,c1,c2,c3,c4,c5)
   238
   239 3A4B			h_tcol
   240 3A4B 38 38 38 38 38 38	 dta h(c0,c1,c2,c3,c4,c5)
   241
   242 3A51			t_satur .ds color_nr
   243 3A57			t_color .ds color_nr
   244 				.endp
   178
   179 02E0-02E1> 00 38		 run main
   180
   181 				*---
   182
